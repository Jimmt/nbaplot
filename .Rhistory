shiny::runApp()
runApp()
runApp()
players.request
GET("http://data.nba.net/10s/prod/v1/2016/players.json")
content)GET("http://data.nba.net/10s/prod/v1/2016/players.json"))
content(GET("http://data.nba.net/10s/prod/v1/2016/players.json"))
runApp()
traceback()
View(content(GET("http://data.nba.net/10s/prod/v1/2016/players.json")))
flatten(content(GET("http://data.nba.net/10s/prod/v1/2016/players.json"))
flatten(content(GET("http://data.nba.net/10s/prod/v1/2016/players.json")))
fromJSON(content(GET("http://data.nba.net/10s/prod/v1/2016/players.json"))
fromJSON(content(GET("http://data.nba.net/10s/prod/v1/2016/players.json")))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
content(players.request, "text")
runApp()
runApp()
runApp()
runApp()
players.request <- GET("http://data.nba.net/10s/prod/v1/2016/players.json")
players <- fromJSON(content(players.request, "text"))
as.data.frame(players)
runApp()
players<-as.data.frame(players)
runApp()
runApp()
runApp()
runApp()
flatten(players)
players <- players %>% mutate(name = paste(league.standard.firstName, league.standard.lastName))
players.request <- GET("http://data.nba.net/10s/prod/v1/2016/players.json")
players <- flatten(as.data.frame(fromJSON(content(players.request, "text"))))
players <- players %>% mutate(name = paste(league.standard.firstName, league.standard.lastName))
players$name
runApp()
View(players)
players$league.standard.teamId
players$league.standard.teams
teams.request <- GET(paste0("http://data.nba.net/10s/prod/v1/", year, "/teams.json"))
teams <- flatten(as.data.frame(fromJSON(content(teams.request, "text"))))
year <- "2017"
teams.request <- GET(paste0("http://data.nba.net/10s/prod/v1/", year, "/teams.json"))
teams <- flatten(as.data.frame(fromJSON(content(teams.request, "text"))))
View(temas)
View(teams)
View(teams)
teams <- teams %>% filter(league.standard.isNBAFranchise == TRUE)
teams
runApp()
runApp()
players[[1]]
players[1]
players$league.standard.teamId
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
traceback()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
traceback()
runApp()
traceback()
runApp()
runApp()
traceback()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gsub(". ", "-", "a.c ")
gsub("\\. ", "-", "a.c ")
gsub("\. ", "-", "a.c ")
gsub("\\. ", "-", "a.c ")
gsub("\\. ", "-", "a.c ") %>% gsub("a", "b")
gsub("\\.", "-", "a.c ") %>% gsub("a", "b")
gsub("\\.", "-", "a.c ")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
players$league.standard.heightFeet + players$league.standard.heightInches
runApp()
players <- players %>% mutate(height = league.standard.heightFeet + league.standard.heightInches / 12)
players <- players %>% mutate(height = league.standard.heightFeet)
players <- players %>% mutate(height = (league.standard.heightFeet + league.standard.heightInches / 12))
players$height <- players$league.standard.heightFeet + players$league.standard.heightInches
runApp()
scan("stats.txt", what="", sep="\n")
typeof(scan("stats.txt", what="", sep="\n"))
scan("stats.txt", what="", sep="\n")[1]
runApp()
match(players$league.standard.weightPounds, 190)
which(players$league.standard.firstName == "Alex")
as.data.frame(scan("stats.txt", what="", sep="\n"))
View(as.data.frame(scan("stats.txt", what="", sep="\n")))
scan("stats.txt", what="", sep="\n")
which("Points per game" %in% scan("stats.txt", what="", sep="\n"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste(c("1", "2", "3"), sep = "", collapse = "")
paste(c("1", "2", "3"), sep = "", collapse = ", ")
paste(c("1", "2", "3"), sep = ", ", collapse = " ")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rgb(10, 10, 10)
runApp()
runApp()
runApp()
runApp()
runApp()
players %>% filter(league.standard.firstName == c("Alex", "Russell"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
